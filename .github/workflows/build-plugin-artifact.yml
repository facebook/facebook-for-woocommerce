name: Build Plugin Artifact

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # This is needed for commenting on PRs
    
    steps:
      - uses: actions/checkout@v1
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci || npm install
          composer install
      
      - name: Build plugin
        run: npm run build
      
      - name: Store built plugin
        uses: actions/upload-artifact@master
        continue-on-error: true
        with:
          name: facebook-for-woocommerce
          path: facebook-for-woocommerce.zip
          
      - name: Check if build succeeded
        id: check_build
        run: |
          if [ -f "facebook-for-woocommerce.zip" ]; then
            echo "build_success=true" >> $GITHUB_OUTPUT
            echo "filesize=$(du -h facebook-for-woocommerce.zip | cut -f1)" >> $GITHUB_OUTPUT
          else
            echo "build_success=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create simple summary
        run: echo "⬇️ Scroll to the bottom of this page and download the 'facebook-for-woocommerce' artifact to get the latest plugin build." > $GITHUB_STEP_SUMMARY
        
      - name: Add comment to PR (using GitHub API)
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const commitSha = context.sha.substring(0, 7);
            
            let commentBody = "";
            
            if ("${{ steps.check_build.outputs.build_success }}" === "true") {
              commentBody = `📦 **Plugin Build Ready**\n\nPR: #${prNumber}\nCommit: ${commitSha}\nSize: ${{ steps.check_build.outputs.filesize }}\n\n**Download:**\nGo to Actions tab → [This workflow run](${runUrl}) → Scroll to bottom → Download "facebook-for-woocommerce" artifact`;
            } else {
              commentBody = `❌ **Plugin Build Failed**\n\nPR: #${prNumber}\nCommit: ${commitSha}\n\n**Details:**\nThe build process did not produce a plugin zip file.\nPlease check the [workflow logs](${runUrl}) for more information.`;
            }
            
            // List all comments in the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            // Find our previous comment if it exists
            const buildComment = comments.find(comment => {
              return comment.user.login === 'github-actions[bot]' && 
                    (comment.body.includes('Plugin Build Ready') || 
                     comment.body.includes('Plugin Build Failed'));
            });
            
            if (buildComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: buildComment.id,
                body: commentBody
              });
              console.log("Updated existing comment");
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log("Created new comment");
            } 