name: Build Plugin Artifact

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    
    steps:
      - uses: actions/checkout@v1
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci || npm install
          composer install
      
      - name: Build plugin
        run: npm run build
      
      - name: Create build info
        run: |
          echo "Build created on $(date)" > build-info.txt
          echo "PR: #${{ github.event.pull_request.number }}" >> build-info.txt
          echo "Commit: ${{ github.sha }}" >> build-info.txt
          echo "Branch: ${{ github.head_ref }}" >> build-info.txt
      
      - name: Upload to builds branch
        run: |
          # Configure git with token-based authentication
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Set the remote URL with authentication token
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # Create a unique folder name based on PR number and commit hash
          FOLDER_NAME="pr-${{ github.event.pull_request.number }}-$(echo ${{ github.sha }} | cut -c1-7)"
          
          # Create builds branch if it doesn't exist
          git fetch origin || true
          git checkout -b builds || true
          git pull origin builds || true
          
          # Create folder for this build
          mkdir -p builds/$FOLDER_NAME
          
          # Copy the zip file and build info
          cp facebook-for-woocommerce.zip builds/$FOLDER_NAME/ || echo "Warning: Zip file not found"
          cp build-info.txt builds/$FOLDER_NAME/
          
          # Add, commit and push
          git add builds/$FOLDER_NAME
          git commit -m "Build for PR #${{ github.event.pull_request.number }} - ${{ github.sha }}"
          git push origin builds
      
      - name: Update PR description with download link
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ github.event.pull_request.number }};
            const sha = "${{ github.sha }}".substring(0, 7);
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            const downloadUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/raw/builds/builds/pr-${prNumber}-${sha}/facebook-for-woocommerce.zip`;
            
            // Create or update download section
            let body = pr.body || '';
            const downloadSection = `\n\n## ðŸ“¦ Plugin Download\n\nThe latest built version of this plugin is available for download:\n\n[ðŸ”½ Download facebook-for-woocommerce.zip](${downloadUrl})\n\nBuild from PR #${prNumber}, commit ${sha}`;
            
            // Check if download section already exists and update it
            if (body.includes('## ðŸ“¦ Plugin Download')) {
              body = body.replace(/## ðŸ“¦ Plugin Download[\s\S]*?(?=##|$)/, downloadSection);
            } else {
              body += downloadSection;
            }
            
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: body
            }); 