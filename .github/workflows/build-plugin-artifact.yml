name: Build Plugin Artifact

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - uses: actions/checkout@v1
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci || npm install
          composer install
      
      - name: Build plugin
        run: npm run build
      
      - name: Generate build info
        id: build-info
        run: |
          # Create a unique identifier for this build
          BUILD_ID="pr-${{ github.event.pull_request.number }}-$(echo ${{ github.sha }} | cut -c1-7)"
          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_OUTPUT
          echo "DATE=$(date)" >> $GITHUB_OUTPUT
          
          # Check if zip file exists
          if [ -f "facebook-for-woocommerce.zip" ]; then
            ZIP_SIZE=$(du -h facebook-for-woocommerce.zip | cut -f1)
            echo "ZIP_EXISTS=true" >> $GITHUB_OUTPUT
            echo "ZIP_SIZE=$ZIP_SIZE" >> $GITHUB_OUTPUT
          else
            echo "ZIP_EXISTS=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Generate download instructions
        id: download-info
        run: |
          cat << EOF > instructions.md
          ## How to download this build manually:
          
          1. Clone the repository:
             \`\`\`
             git clone https://github.com/${{ github.repository }}.git
             cd $(basename ${{ github.repository }})
             \`\`\`
          
          2. Checkout the PR branch:
             \`\`\`
             git fetch origin pull/${{ github.event.pull_request.number }}/head:pr-${{ github.event.pull_request.number }}
             git checkout pr-${{ github.event.pull_request.number }}
             \`\`\`
          
          3. Install dependencies and build:
             \`\`\`
             npm install
             composer install
             npm run build
             \`\`\`
          
          4. The zip file will be created in the root directory.
          EOF
          
          INSTRUCTIONS="$(cat instructions.md)"
          INSTRUCTIONS="${INSTRUCTIONS//'%'/'%25'}"
          INSTRUCTIONS="${INSTRUCTIONS//$'\n'/'%0A'}"
          INSTRUCTIONS="${INSTRUCTIONS//$'\r'/'%0D'}"
          echo "INSTRUCTIONS=$INSTRUCTIONS" >> $GITHUB_OUTPUT
      
      - name: Update PR description
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ github.event.pull_request.number }};
            const sha = "${{ github.sha }}".substring(0, 7);
            const buildId = "${{ steps.build-info.outputs.BUILD_ID }}";
            const buildDate = "${{ steps.build-info.outputs.DATE }}";
            const zipExists = "${{ steps.build-info.outputs.ZIP_EXISTS }}" === "true";
            const zipSize = "${{ steps.build-info.outputs.ZIP_SIZE }}";
            const instructions = `${{ steps.download-info.outputs.INSTRUCTIONS }}`;
            
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            // Create or update download section
            let body = pr.body || '';
            
            const buildStatus = zipExists 
              ? `‚úÖ Build successful - Size: ${zipSize}`
              : `‚ùå Build failed - No zip file produced`;
              
            const downloadSection = `\n\n## üì¶ Plugin Build Status\n\nBuild ID: \`${buildId}\`\nCommit: \`${sha}\`\nDate: ${buildDate}\nStatus: ${buildStatus}\n\n### Build Instructions\n\n${instructions}\n\nLast updated: ${new Date().toISOString()}`;
            
            // Check if download section already exists and update it
            if (body.includes('## üì¶ Plugin Build Status')) {
              body = body.replace(/## üì¶ Plugin Build Status[\s\S]*?(?=##|$)/, downloadSection);
            } else {
              body += downloadSection;
            }
            
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: body
            }); 