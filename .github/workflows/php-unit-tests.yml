name: PHP Unit Tests

on: [ push, pull_request ] # Run on all pushes and PRs

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  UnitTests:
    name: PHP unit tests - PHP ${{ matrix.php }}, WP ${{ matrix.wp-version }}, WC ${{ matrix.wc-version }}
    runs-on: ubuntu-latest
    env:
      WP_CORE_DIR: "/tmp/wordpress/src"
      WP_TESTS_DIR: "/tmp/wordpress/tests/phpunit"
    strategy:
      fail-fast: false
      matrix:
        php: [ 7.4, 8.3 ]
        wp-version: [ latest ]
        wc-version: [ latest ]

    steps:
      - name: Install SVN
        run: sudo apt-get install subversion -y

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare PHP
        uses: woocommerce/grow/prepare-php@actions-v1
        with:
          php-version: "${{ matrix.php }}"
          coverage: xdebug

      - name: Prepare MySQL
        uses: woocommerce/grow/prepare-mysql@actions-v1

      - name: Install WP tests
        run: |
          chmod +x ./bin/install-wp-tests.sh
          ./bin/install-wp-tests.sh wordpress_test root root localhost ${{ matrix.wp-version }} ${{ matrix.wc-version }}

      - name: Run PHP unit tests with coverage
        id: phpunit
        run: |
          echo "üß™ Running PHP unit tests with verbose output..."

          # Run tests with verbose output and capture exit code
          set +e
          ./vendor/bin/phpunit --verbose --coverage-clover=coverage.xml --coverage-text
          PHPUNIT_EXIT_CODE=$?
          set -e

          echo "PHPUnit exit code: $PHPUNIT_EXIT_CODE"

          # Extract coverage summary from XML if it exists
          COVERAGE=$(php -r "
            if (file_exists('coverage.xml')) {
              \$xml = simplexml_load_file('coverage.xml');
              \$metrics = \$xml->project->metrics;
              \$covered = (int)\$metrics['coveredstatements'];
              \$total = (int)\$metrics['statements'];
              \$percentage = \$total > 0 ? round((\$covered / \$total) * 100, 2) : 0;
              echo \$percentage;
            } else {
              echo '0';
            }
          ")

          echo "coverage_summary=$COVERAGE" >> $GITHUB_OUTPUT
          echo "üìä Coverage: $COVERAGE%"

          # Exit with the PHPUnit exit code to fail the job if tests failed
          exit $PHPUNIT_EXIT_CODE

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: php-coverage-report PHP - ${{ matrix.php }}, WP - ${{ matrix.wp-version }} , WC - ${{ matrix.wc-version }}
          path: coverage.xml
          retention-days: 30

      - name: Check coverage threshold
        continue-on-error: true
        run: |
          COVERAGE="${{ steps.phpunit.outputs.coverage_summary }}"
          MIN_THRESHOLD=40

          echo "üìà Coverage: $COVERAGE%"
          echo "üéØ Threshold: $MIN_THRESHOLD%"

          if (( $(echo "$COVERAGE $MIN_THRESHOLD" | awk '{print ($1 >= $2)}') )); then
            echo "‚úÖ Coverage check passed!"
          else
            echo "‚ùå Coverage too low. Need $MIN_THRESHOLD%, got $COVERAGE%"
            exit 1
          fi
